version: 2.1

executors:
    my-executor:
        docker:
            - image: circleci/node:11.0.0
        working_directory: /tmp/bcpa-website

jobs:
    # -- PREPARE SOURCE CODE, NPM, AND NODE_MODULES --
    prepare:
        executor: my-executor

        steps:
            # Prepare source code
            - restore_cache:
                name: Restore source code from cache
                keys:
                    - source-v1-{{ .Branch }}-{{ .Revision }}
                    - source-v1-{{ .Branch }}-
                    - source-v1

            - checkout:
                name: Checkout latest source code

            - save_cache:
                name: Cache source code
                key: source-v1-{{ .Branch }}-{{ .Revision }}
                paths:
                    - ".git"

            # Prepare npm and node_modules
            - run:
                name: Update npm
                command: sudo npm install -g npm@latest

            - restore_cache:
                name: Restore backend node_modules from cache
                keys:
                    - npm-backend-v1-{{ .Branch }}-{{ checksum "backend/package.json" }}
                    - npm-backend-v1-{{ .Branch }}-
                    - npm-backend-v1
            
            - restore_cache:
                name: Restore frontend node_modules from cache
                keys:
                    - npm-frontend-v1-{{ .Branch }}-{{ checksum "frontend/package.json" }}
                    - npm-frontend-v1-{{ .Branch }}-
                    - npm-frontend-v1

            - run:
                name: Run npm install for the backend
                command: npm install --prefix backend

            - run:
                name: Run npm install for the frontend
                command: npm install --prefix frontend

            - save_cache:
                name: Cache backend node_modules
                key: npm-backend-v1-{{ .Branch }}-{{ checksum "backend/package.json" }}
                paths:
                    - ./backend/node_modules

            - save_cache:
                name: Cache frontend node_modules
                key: npm-frontend-v1-{{ .Branch }}-{{ checksum "frontend/package.json" }}
                paths:
                    - ./frontend/node_modules

            # Retain files for subsequent jobs
            - persist_to_workspace:
                name: Store files for subsequent jobs
                root: /tmp/bcpa-website
                paths:
                    - ./backend
                    - ./frontend

    # -- TEST BACKEND --
    test-backend:
        executor: my-executor

        steps:
            - attach_workspace:
                at: /tmp/bcpa-website

            - run:
                name: Run tests
                command: npm test --prefix backend

    # -- TEST FRONTEND --
    test-frontend:
        executor: my-executor

        steps:
            - attach_workspace:
                at: /tmp/bcpa-website

            - run:
                name: Run tests
                command: npm test --prefix frontend

    # -- BUILD BACKEND --
    build-backend:
        executor: my-executor

        steps:
            - attach_workspace:
                at: /tmp/bcpa-website

            - run:
                name: Build production API code 
                command: npm run build --prefix backend

            - persist_to_workspace:
                name: Store build output for deployment job
                root: /tmp/bcpa-website
                paths:
                    - ./backend/build

    # -- BUILD FRONTEND --
    build-frontend:
        executor: my-executor

        steps:
            - attach_workspace:
                at: /tmp/bcpa-website

            - run:
                name: Build production React code 
                command: npm run build --prefix frontend

            - persist_to_workspace:
                name: Store build output for deployment job
                root: /tmp/bcpa-website
                paths:
                    - ./frontend/build

    # -- DEPLOY --
    deploy:
        executor: my-executor

        steps:
            - run:
                name: ECHO
                command: echo "deploying"
            

workflows:
    version: 2.1

    prepare-test-build-deploy:
        jobs:
            - prepare
            - test-backend:
                requires:
                    - prepare
            - test-frontend:
                requires:
                    - prepare
            - build-backend:
                requires:
                    - test-backend
            - build-frontend:
                requires:
                    - test-frontend
            - deploy:
                requires:
                    - build-backend
                    - build-frontend

      # - run: # run coverage report
      #     name: code-coverage
      #     command: './node_modules/.bin/nyc report --reporter=text-lcov'
      # - store_artifacts: # special step to save test results as as artifact
      #     # Upload test summary for display in Artifacts: https://circleci.com/docs/2.0/artifacts/ 
      #     path: test-results.xml
      #     prefix: tests
      # - store_artifacts: # for display in Artifacts: https://circleci.com/docs/2.0/artifacts/ 
      #     path: coverage
      #     prefix: coverage
      # - store_test_results: # for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
      #     path: test-results.xml
      # # See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples
